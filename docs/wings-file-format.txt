Wings .wings File Format
========================

The file is made up of a header and some chunks.

struct wings_file_header
{
    char id[8];         // "WINGS\0\0\0"
    u32  major_version; // 1
    u32  minor_version; // 0
};

struct wings_file_chunk
{
    char name[16];
    u64  chunk_size;
	u32  id;
	u32  parent_id;
};

Chunk "strings"
---------------
Stores c-strings. The strings are 0 terminated and aligned to 8 bytes.
Other blocks might reference strings inside this block.
For example u32 texture_file_name; // offset into strings chunk
---------------
char string_data[chunk_size];

Chunk "blender"
---------------
struct wings_file_blender_chunk
{
	u64 number_of_models;
	u64 creation_time;
	u32 blend_file_name;
	u32 blender_version; // offset into strings chunk
};

Chunk "model"
-------------
struct wings_file_model_chunk
{
	u32 number_of_meshes;
	u32 name; // offset into strings chunk
};

Chunk "mesh"
------------
struct wings_file_mesh_chunk
{
	u32 number_of_vertices;
	u32 texture_file_name; // offset into strings chunk
	u8  has_positions;
	u8  has_normals;
	u8  has_uvs;
	u8  has_colors;
	u8  has_joint_ids;
	u8  has_joint_weights;
	u8  padding[2];
};

Chunk "positions"
----------------
struct v3 data[(chunk_size - chunk_header_size)/sizeof(struct v3)];

Chunk "normals"
----------------
struct v3 data[(chunk_size - chunk_header_size)/sizeof(struct v3)];

Chunk "uvs"
----------------
struct v3 data[(chunk_size - chunk_header_size)/sizeof(struct v2)];

Chunk "colors"
----------------
struct v4 data[(chunk_size - chunk_header_size)/sizeof(struct v4)];

Chunk "joint_ids"
-----------------
struct v4s data[(chunk_size - chunk_header_size)/sizeof(struct v4s)];

Chunk "joint_weights"
-----------------
struct v4 data[(chunk_size - chunk_header_size)/sizeof(struct v4)];

